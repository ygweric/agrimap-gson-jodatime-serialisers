//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/gson-jodatime-serialisers/build/mainTranslationExtraction/com/fatboyindustrial/gsonjodatime/LocalTimeConverter.java
//

#include "DateTimeFormatter.h"
#include "DateTimeFormatterBuilder.h"
#include "DateTimeParser.h"
#include "DateTimePrinter.h"
#include "ISODateTimeFormat.h"
#include "J2ObjC_source.h"
#include "JsonDeserializationContext.h"
#include "JsonElement.h"
#include "JsonPrimitive.h"
#include "JsonSerializationContext.h"
#include "LocalTime.h"
#include "LocalTimeConverter.h"
#include "java/lang/reflect/Type.h"

inline OrgJodaTimeFormatDateTimeFormatter *ComFatboyindustrialGsonjodatimeLocalTimeConverter_get_FORMATTER();
static OrgJodaTimeFormatDateTimeFormatter *ComFatboyindustrialGsonjodatimeLocalTimeConverter_FORMATTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFatboyindustrialGsonjodatimeLocalTimeConverter, FORMATTER, OrgJodaTimeFormatDateTimeFormatter *)

J2OBJC_INITIALIZED_DEFN(ComFatboyindustrialGsonjodatimeLocalTimeConverter)

@implementation ComFatboyindustrialGsonjodatimeLocalTimeConverter

- (ComGoogleGsonJsonElement *)serializeWithId:(OrgJodaTimeLocalTime *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return new_ComGoogleGsonJsonPrimitive_initWithNSString_([((OrgJodaTimeLocalTime *) nil_chk(src)) toStringWithOrgJodaTimeFormatDateTimeFormatter:ComFatboyindustrialGsonjodatimeLocalTimeConverter_FORMATTER]);
}

- (OrgJodaTimeLocalTime *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                          withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                      withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  if ([((ComGoogleGsonJsonElement *) nil_chk(json)) getAsString] == nil || [((NSString *) nil_chk([json getAsString])) isEmpty]) {
    return nil;
  }
  return OrgJodaTimeLocalTime_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_([json getAsString], ComFatboyindustrialGsonjodatimeLocalTimeConverter_FORMATTER);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComFatboyindustrialGsonjodatimeLocalTimeConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeLocalTime;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  methods[1].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FORMATTER", "LOrgJodaTimeFormatDateTimeFormatter;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LOrgJodaTimeLocalTime;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "LComGoogleGsonJsonParseException;", &ComFatboyindustrialGsonjodatimeLocalTimeConverter_FORMATTER, "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lorg/joda/time/LocalTime;>;Lcom/google/gson/JsonDeserializer<Lorg/joda/time/LocalTime;>;" };
  static const J2ObjcClassInfo _ComFatboyindustrialGsonjodatimeLocalTimeConverter = { "LocalTimeConverter", "com.fatboyindustrial.gsonjodatime", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, 6, -1 };
  return &_ComFatboyindustrialGsonjodatimeLocalTimeConverter;
}

+ (void)initialize {
  if (self == [ComFatboyindustrialGsonjodatimeLocalTimeConverter class]) {
    ComFatboyindustrialGsonjodatimeLocalTimeConverter_FORMATTER = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([new_OrgJodaTimeFormatDateTimeFormatterBuilder_init() appendWithOrgJodaTimeFormatDateTimePrinter:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_time())) getPrinter] withOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_localTimeParser())) getParser]])) toFormatter];
    J2OBJC_SET_INITIALIZED(ComFatboyindustrialGsonjodatimeLocalTimeConverter)
  }
}

@end

void ComFatboyindustrialGsonjodatimeLocalTimeConverter_init(ComFatboyindustrialGsonjodatimeLocalTimeConverter *self) {
  NSObject_init(self);
}

ComFatboyindustrialGsonjodatimeLocalTimeConverter *new_ComFatboyindustrialGsonjodatimeLocalTimeConverter_init() {
  J2OBJC_NEW_IMPL(ComFatboyindustrialGsonjodatimeLocalTimeConverter, init)
}

ComFatboyindustrialGsonjodatimeLocalTimeConverter *create_ComFatboyindustrialGsonjodatimeLocalTimeConverter_init() {
  J2OBJC_CREATE_IMPL(ComFatboyindustrialGsonjodatimeLocalTimeConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFatboyindustrialGsonjodatimeLocalTimeConverter)
